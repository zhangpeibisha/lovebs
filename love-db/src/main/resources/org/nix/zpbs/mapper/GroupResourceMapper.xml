<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nix.zpbs.mapper.GroupResourceMapper">
  <resultMap id="BaseResultMap" type="org.nix.zpbs.model.GroupResource">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="GROUP_ID" jdbcType="BIGINT" property="groupId" />
    <result column="RESOURCE_ID" jdbcType="BIGINT" property="resourceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, GROUP_ID, RESOURCE_ID
  </sql>
  <select id="selectByExample" parameterType="org.nix.zpbs.model.GroupResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from GROUP_RESOURCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from GROUP_RESOURCE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from GROUP_RESOURCE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.nix.zpbs.model.GroupResourceExample">
    delete from GROUP_RESOURCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.nix.zpbs.model.GroupResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into GROUP_RESOURCE (GROUP_ID, RESOURCE_ID)
    values (#{groupId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.nix.zpbs.model.GroupResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into GROUP_RESOURCE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="resourceId != null">
        RESOURCE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.nix.zpbs.model.GroupResourceExample" resultType="java.lang.Integer">
    select count(*) from GROUP_RESOURCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update GROUP_RESOURCE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null">
        GROUP_ID = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.resourceId != null">
        RESOURCE_ID = #{record.resourceId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update GROUP_RESOURCE
    set ID = #{record.id,jdbcType=BIGINT},
      GROUP_ID = #{record.groupId,jdbcType=BIGINT},
      RESOURCE_ID = #{record.resourceId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.nix.zpbs.model.GroupResource">
    update GROUP_RESOURCE
    <set>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        RESOURCE_ID = #{resourceId,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nix.zpbs.model.GroupResource">
    update GROUP_RESOURCE
    set GROUP_ID = #{groupId,jdbcType=BIGINT},
      RESOURCE_ID = #{resourceId,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>