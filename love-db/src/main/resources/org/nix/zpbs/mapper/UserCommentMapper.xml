<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nix.zpbs.mapper.UserCommentMapper">
  <resultMap id="BaseResultMap" type="org.nix.zpbs.model.UserComment">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="TYPE_ID" jdbcType="INTEGER" property="typeId" />
    <result column="COMMIT_ID" jdbcType="BIGINT" property="commitId" />
    <result column="COMMIT_CONTENT" jdbcType="VARCHAR" property="commitContent" />
    <result column="COMMIT_USER_ID" jdbcType="BIGINT" property="commitUserId" />
    <result column="COMMIT_TIME" jdbcType="BIGINT" property="commitTime" />
    <result column="COMMIT_IP" jdbcType="VARCHAR" property="commitIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USER_ID, TYPE_ID, COMMIT_ID, COMMIT_CONTENT, COMMIT_USER_ID, COMMIT_TIME, COMMIT_IP
  </sql>
  <select id="selectByExample" parameterType="org.nix.zpbs.model.UserCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from USER_COMMENT
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from USER_COMMENT
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.nix.zpbs.model.UserCommentExample">
    delete from USER_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.nix.zpbs.model.UserComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into USER_COMMENT (USER_ID, TYPE_ID, COMMIT_ID, 
      COMMIT_CONTENT, COMMIT_USER_ID, COMMIT_TIME, 
      COMMIT_IP)
    values (#{userId,jdbcType=BIGINT}, #{typeId,jdbcType=INTEGER}, #{commitId,jdbcType=BIGINT}, 
      #{commitContent,jdbcType=VARCHAR}, #{commitUserId,jdbcType=BIGINT}, #{commitTime,jdbcType=BIGINT}, 
      #{commitIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.nix.zpbs.model.UserComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into USER_COMMENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="commitId != null">
        COMMIT_ID,
      </if>
      <if test="commitContent != null">
        COMMIT_CONTENT,
      </if>
      <if test="commitUserId != null">
        COMMIT_USER_ID,
      </if>
      <if test="commitTime != null">
        COMMIT_TIME,
      </if>
      <if test="commitIp != null">
        COMMIT_IP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=BIGINT},
      </if>
      <if test="commitContent != null">
        #{commitContent,jdbcType=VARCHAR},
      </if>
      <if test="commitUserId != null">
        #{commitUserId,jdbcType=BIGINT},
      </if>
      <if test="commitTime != null">
        #{commitTime,jdbcType=BIGINT},
      </if>
      <if test="commitIp != null">
        #{commitIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.nix.zpbs.model.UserCommentExample" resultType="java.lang.Integer">
    select count(*) from USER_COMMENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update USER_COMMENT
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.commitId != null">
        COMMIT_ID = #{record.commitId,jdbcType=BIGINT},
      </if>
      <if test="record.commitContent != null">
        COMMIT_CONTENT = #{record.commitContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commitUserId != null">
        COMMIT_USER_ID = #{record.commitUserId,jdbcType=BIGINT},
      </if>
      <if test="record.commitTime != null">
        COMMIT_TIME = #{record.commitTime,jdbcType=BIGINT},
      </if>
      <if test="record.commitIp != null">
        COMMIT_IP = #{record.commitIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update USER_COMMENT
    set ID = #{record.id,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      COMMIT_ID = #{record.commitId,jdbcType=BIGINT},
      COMMIT_CONTENT = #{record.commitContent,jdbcType=VARCHAR},
      COMMIT_USER_ID = #{record.commitUserId,jdbcType=BIGINT},
      COMMIT_TIME = #{record.commitTime,jdbcType=BIGINT},
      COMMIT_IP = #{record.commitIp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.nix.zpbs.model.UserComment">
    update USER_COMMENT
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="commitId != null">
        COMMIT_ID = #{commitId,jdbcType=BIGINT},
      </if>
      <if test="commitContent != null">
        COMMIT_CONTENT = #{commitContent,jdbcType=VARCHAR},
      </if>
      <if test="commitUserId != null">
        COMMIT_USER_ID = #{commitUserId,jdbcType=BIGINT},
      </if>
      <if test="commitTime != null">
        COMMIT_TIME = #{commitTime,jdbcType=BIGINT},
      </if>
      <if test="commitIp != null">
        COMMIT_IP = #{commitIp,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nix.zpbs.model.UserComment">
    update USER_COMMENT
    set USER_ID = #{userId,jdbcType=BIGINT},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      COMMIT_ID = #{commitId,jdbcType=BIGINT},
      COMMIT_CONTENT = #{commitContent,jdbcType=VARCHAR},
      COMMIT_USER_ID = #{commitUserId,jdbcType=BIGINT},
      COMMIT_TIME = #{commitTime,jdbcType=BIGINT},
      COMMIT_IP = #{commitIp,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>