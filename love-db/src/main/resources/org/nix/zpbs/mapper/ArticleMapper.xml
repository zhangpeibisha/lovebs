<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nix.zpbs.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="org.nix.zpbs.model.Article">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ARTICLE_NAME" jdbcType="VARCHAR" property="articleName" />
    <result column="ARTICLE_TIME" jdbcType="BIGINT" property="articleTime" />
    <result column="ARTICLE_IP" jdbcType="VARCHAR" property="articleIp" />
    <result column="ARTICLE_CLICK" jdbcType="INTEGER" property="articleClick" />
    <result column="SORT_ARTICLE_ID" jdbcType="BIGINT" property="sortArticleId" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="TYPE_ID" jdbcType="INTEGER" property="typeId" />
    <result column="ARTICLE_TYPE" jdbcType="INTEGER" property="articleType" />
    <result column="ARTICLE_UP" jdbcType="INTEGER" property="articleUp" />
    <result column="ARTICLE_SUPPORT" jdbcType="INTEGER" property="articleSupport" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.nix.zpbs.model.Article">
    <result column="ARTICLE_CONTENT" jdbcType="LONGVARCHAR" property="articleContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ARTICLE_NAME, ARTICLE_TIME, ARTICLE_IP, ARTICLE_CLICK, SORT_ARTICLE_ID, USER_ID, 
    TYPE_ID, ARTICLE_TYPE, ARTICLE_UP, ARTICLE_SUPPORT
  </sql>
  <sql id="Blob_Column_List">
    ARTICLE_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.nix.zpbs.model.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ARTICLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.nix.zpbs.model.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ARTICLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ARTICLE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ARTICLE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.nix.zpbs.model.ArticleExample">
    delete from ARTICLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.nix.zpbs.model.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ARTICLE (ARTICLE_NAME, ARTICLE_TIME, ARTICLE_IP, 
      ARTICLE_CLICK, SORT_ARTICLE_ID, USER_ID, 
      TYPE_ID, ARTICLE_TYPE, ARTICLE_UP, 
      ARTICLE_SUPPORT, ARTICLE_CONTENT)
    values (#{articleName,jdbcType=VARCHAR}, #{articleTime,jdbcType=BIGINT}, #{articleIp,jdbcType=VARCHAR}, 
      #{articleClick,jdbcType=INTEGER}, #{sortArticleId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{typeId,jdbcType=INTEGER}, #{articleType,jdbcType=INTEGER}, #{articleUp,jdbcType=INTEGER}, 
      #{articleSupport,jdbcType=INTEGER}, #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.nix.zpbs.model.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ARTICLE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleName != null">
        ARTICLE_NAME,
      </if>
      <if test="articleTime != null">
        ARTICLE_TIME,
      </if>
      <if test="articleIp != null">
        ARTICLE_IP,
      </if>
      <if test="articleClick != null">
        ARTICLE_CLICK,
      </if>
      <if test="sortArticleId != null">
        SORT_ARTICLE_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="typeId != null">
        TYPE_ID,
      </if>
      <if test="articleType != null">
        ARTICLE_TYPE,
      </if>
      <if test="articleUp != null">
        ARTICLE_UP,
      </if>
      <if test="articleSupport != null">
        ARTICLE_SUPPORT,
      </if>
      <if test="articleContent != null">
        ARTICLE_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleName != null">
        #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null">
        #{articleTime,jdbcType=BIGINT},
      </if>
      <if test="articleIp != null">
        #{articleIp,jdbcType=VARCHAR},
      </if>
      <if test="articleClick != null">
        #{articleClick,jdbcType=INTEGER},
      </if>
      <if test="sortArticleId != null">
        #{sortArticleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="articleType != null">
        #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleUp != null">
        #{articleUp,jdbcType=INTEGER},
      </if>
      <if test="articleSupport != null">
        #{articleSupport,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.nix.zpbs.model.ArticleExample" resultType="java.lang.Integer">
    select count(*) from ARTICLE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ARTICLE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.articleName != null">
        ARTICLE_NAME = #{record.articleName,jdbcType=VARCHAR},
      </if>
      <if test="record.articleTime != null">
        ARTICLE_TIME = #{record.articleTime,jdbcType=BIGINT},
      </if>
      <if test="record.articleIp != null">
        ARTICLE_IP = #{record.articleIp,jdbcType=VARCHAR},
      </if>
      <if test="record.articleClick != null">
        ARTICLE_CLICK = #{record.articleClick,jdbcType=INTEGER},
      </if>
      <if test="record.sortArticleId != null">
        SORT_ARTICLE_ID = #{record.sortArticleId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.articleType != null">
        ARTICLE_TYPE = #{record.articleType,jdbcType=INTEGER},
      </if>
      <if test="record.articleUp != null">
        ARTICLE_UP = #{record.articleUp,jdbcType=INTEGER},
      </if>
      <if test="record.articleSupport != null">
        ARTICLE_SUPPORT = #{record.articleSupport,jdbcType=INTEGER},
      </if>
      <if test="record.articleContent != null">
        ARTICLE_CONTENT = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update ARTICLE
    set ID = #{record.id,jdbcType=BIGINT},
      ARTICLE_NAME = #{record.articleName,jdbcType=VARCHAR},
      ARTICLE_TIME = #{record.articleTime,jdbcType=BIGINT},
      ARTICLE_IP = #{record.articleIp,jdbcType=VARCHAR},
      ARTICLE_CLICK = #{record.articleClick,jdbcType=INTEGER},
      SORT_ARTICLE_ID = #{record.sortArticleId,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      ARTICLE_TYPE = #{record.articleType,jdbcType=INTEGER},
      ARTICLE_UP = #{record.articleUp,jdbcType=INTEGER},
      ARTICLE_SUPPORT = #{record.articleSupport,jdbcType=INTEGER},
      ARTICLE_CONTENT = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ARTICLE
    set ID = #{record.id,jdbcType=BIGINT},
      ARTICLE_NAME = #{record.articleName,jdbcType=VARCHAR},
      ARTICLE_TIME = #{record.articleTime,jdbcType=BIGINT},
      ARTICLE_IP = #{record.articleIp,jdbcType=VARCHAR},
      ARTICLE_CLICK = #{record.articleClick,jdbcType=INTEGER},
      SORT_ARTICLE_ID = #{record.sortArticleId,jdbcType=BIGINT},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      TYPE_ID = #{record.typeId,jdbcType=INTEGER},
      ARTICLE_TYPE = #{record.articleType,jdbcType=INTEGER},
      ARTICLE_UP = #{record.articleUp,jdbcType=INTEGER},
      ARTICLE_SUPPORT = #{record.articleSupport,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.nix.zpbs.model.Article">
    update ARTICLE
    <set>
      <if test="articleName != null">
        ARTICLE_NAME = #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="articleTime != null">
        ARTICLE_TIME = #{articleTime,jdbcType=BIGINT},
      </if>
      <if test="articleIp != null">
        ARTICLE_IP = #{articleIp,jdbcType=VARCHAR},
      </if>
      <if test="articleClick != null">
        ARTICLE_CLICK = #{articleClick,jdbcType=INTEGER},
      </if>
      <if test="sortArticleId != null">
        SORT_ARTICLE_ID = #{sortArticleId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        TYPE_ID = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="articleType != null">
        ARTICLE_TYPE = #{articleType,jdbcType=INTEGER},
      </if>
      <if test="articleUp != null">
        ARTICLE_UP = #{articleUp,jdbcType=INTEGER},
      </if>
      <if test="articleSupport != null">
        ARTICLE_SUPPORT = #{articleSupport,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        ARTICLE_CONTENT = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.nix.zpbs.model.Article">
    update ARTICLE
    set ARTICLE_NAME = #{articleName,jdbcType=VARCHAR},
      ARTICLE_TIME = #{articleTime,jdbcType=BIGINT},
      ARTICLE_IP = #{articleIp,jdbcType=VARCHAR},
      ARTICLE_CLICK = #{articleClick,jdbcType=INTEGER},
      SORT_ARTICLE_ID = #{sortArticleId,jdbcType=BIGINT},
      USER_ID = #{userId,jdbcType=BIGINT},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      ARTICLE_TYPE = #{articleType,jdbcType=INTEGER},
      ARTICLE_UP = #{articleUp,jdbcType=INTEGER},
      ARTICLE_SUPPORT = #{articleSupport,jdbcType=INTEGER},
      ARTICLE_CONTENT = #{articleContent,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nix.zpbs.model.Article">
    update ARTICLE
    set ARTICLE_NAME = #{articleName,jdbcType=VARCHAR},
      ARTICLE_TIME = #{articleTime,jdbcType=BIGINT},
      ARTICLE_IP = #{articleIp,jdbcType=VARCHAR},
      ARTICLE_CLICK = #{articleClick,jdbcType=INTEGER},
      SORT_ARTICLE_ID = #{sortArticleId,jdbcType=BIGINT},
      USER_ID = #{userId,jdbcType=BIGINT},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      ARTICLE_TYPE = #{articleType,jdbcType=INTEGER},
      ARTICLE_UP = #{articleUp,jdbcType=INTEGER},
      ARTICLE_SUPPORT = #{articleSupport,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>