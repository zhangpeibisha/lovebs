<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nix.lovedomain.rbac.dao.PermissonMapper">
    <resultMap id="BaseResultMap" type="org.nix.lovedomain.rbac.bean.po.Permisson">
        <id column="permisson_id" jdbcType="INTEGER" property="permissonId"/>
        <result column="permisson_name" jdbcType="VARCHAR" property="permissonName"/>
        <result column="permisson_url" jdbcType="VARCHAR" property="permissonUrl"/>
        <result column="parent_permisson_id" jdbcType="INTEGER" property="parentPermissonId"/>
        <result column="parent_permisson_name" jdbcType="VARCHAR" property="parentPermissonName"/>
        <result column="permisson_lv" jdbcType="INTEGER" property="permissonLv"/>
        <result column="methods" jdbcType="VARCHAR" property="methods"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="open" javaType="java.lang.Boolean" property="open"/>
        <result column="permitAll" javaType="java.lang.Boolean" property="permitAll"/>
    </resultMap>

    <sql id="Base_Column_List">
    permisson_id, permisson_name, permisson_url, parent_permisson_id, permisson_lv,methods,description,open,permitAll,parent_permisson_name
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from permisson
        where permisson_id = #{permissonId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permisson
    where permisson_id = #{permissonId,jdbcType=INTEGER}
  </delete>

    <insert id="insertSelective" parameterType="org.nix.lovedomain.rbac.bean.po.Permisson">
        insert into permisson
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="permissonId != null">
                permisson_id,
            </if>
            <if test="permissonName != null">
                permisson_name,
            </if>
            <if test="permissonUrl != null">
                permisson_url,
            </if>
            <if test="parentPermissonId != null">
                parent_permisson_id,
            </if>
            <if test="permissonLv != null">
                permisson_lv,
            </if>

            <if test="parentPermissonName != null">
                parent_permisson_name,
            </if>
            <if test="methods != null">
                methods,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="open != null">
                open,
            </if>
            <if test="permitAll != null">
                permitAll,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="permissonId != null">
                #{permissonId,jdbcType=INTEGER},
            </if>
            <if test="permissonName != null">
                #{permissonName,jdbcType=VARCHAR},
            </if>
            <if test="permissonUrl != null">
                #{permissonUrl,jdbcType=VARCHAR},
            </if>
            <if test="parentPermissonId != null">
                #{parentPermissonId,jdbcType=INTEGER},
            </if>
            <if test="permissonLv != null">
                #{permissonLv,jdbcType=INTEGER},
            </if>

            <if test="parentPermissonName != null">
                #{parentPermissonName,jdbcType=VARCHAR},
            </if>
            <if test="methods != null">
                #{methods,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="open != null">
                #{open},
            </if>
            <if test="permitAll != null">
                #{permitAll},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.nix.lovedomain.rbac.bean.po.Permisson">
        update permisson
        <set>
            <if test="permissonName != null">
                permisson_name = #{permissonName,jdbcType=VARCHAR},
            </if>
            <if test="permissonUrl != null">
                permisson_url = #{permissonUrl,jdbcType=VARCHAR},
            </if>
            <if test="parentPermissonId != null">
                parent_permisson_id = #{parentPermissonId,jdbcType=INTEGER},
            </if>
            <if test="permissonLv != null">
                permisson_lv = #{permissonLv,jdbcType=INTEGER},
            </if>

            <if test="parentPermissonName != null">
                parent_permisson_name = #{parentPermissonName,jdbcType=VARCHAR},
            </if>
            <if test="methods != null">
                methods = #{methods,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="open != null">
                open = #{open},
            </if>
            <if test="permitAll != null">
                permitAll = #{permitAll},
            </if>
        </set>
        where permisson_id = #{permissonId,jdbcType=INTEGER}
    </update>

    <select id="listPermissionWithParName" parameterType="org.nix.lovedomain.rbac.bean.po.Permisson"
            resultMap="BaseResultMap">
        SELECT p1.permisson_id, p1.permisson_name, p1.permisson_url, p1.parent_permisson_id,p2.permisson_name
        parent_permisson_name, p1.permisson_lv
        FROM permisson p1
        LEFT JOIN permisson p2 on p1.parent_permisson_id= p2.permisson_id
        <where>
            <if test="permissonName != null and permissonName !=''">
                AND p1.permisson_name like '%${permissonName}%'
            </if>
        </where>
    </select>

    <select id="listPermission" parameterType="org.nix.lovedomain.rbac.bean.po.Permisson" resultMap="BaseResultMap">
        SELECT p1.permisson_id, p1.permisson_name, p1.permisson_url, p1.parent_permisson_id, p1.permisson_lv
        FROM permisson p1
        <where>
            <if test="permissonLv != null and permissonLv !=0">
                AND p1.permisson_lv = #{permissonLv,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <resultMap id="PermissionViewMap" type="org.nix.lovedomain.rbac.bean.vo.PermissonView">
        <id column="par_permisson_id" jdbcType="INTEGER" property="permissonId"/>
        <result column="par_permisson_name" jdbcType="VARCHAR" property="permissonName"/>
        <collection property="childPermissons" ofType="org.nix.lovedomain.rbac.bean.po.Permisson">
            <id column="child_permisson_id" jdbcType="INTEGER" property="permissonId"/>
            <result column="child_permisson_name" jdbcType="VARCHAR" property="permissonName"/>
            <result column="child_permisson_url" jdbcType="VARCHAR" property="permissonUrl"/>
        </collection>

    </resultMap>

    <select id="listPermissionView" resultMap="PermissionViewMap">
       SELECT  p1.permisson_id par_permisson_id, p1.permisson_name par_permisson_name,p2.permisson_id child_permisson_id, p2.permisson_name child_permisson_name,p2.permisson_url child_permisson_url
       FROM  permisson p1
       LEFT JOIN permisson p2 ON  p1.permisson_id=p2.parent_permisson_id
       WHERE p1.permisson_lv=1
  </select>


    <select id="getUserPermissons" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
	p2.permisson_id,
	p2.permisson_name,
	p2.permisson_url,
	p2.open,
	p2.permitAll
    FROM
        role_permisson p,
        permisson p2
    WHERE
        p.permisson_id = p2.permisson_id
    AND p.role_id IN (
        SELECT
            r.role_id
        FROM
            user_role r
        WHERE
            r.user_id = #{userId,jdbcType=INTEGER}
    )
  </select>

</mapper>