<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nix.lovedomain.dao.mapper.PublishquestionnaireMapper">
  <resultMap id="BaseResultMap" type="org.nix.lovedomain.model.Publishquestionnaire">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="releaseId" jdbcType="INTEGER" property="releaseid" />
    <result column="courseId" jdbcType="INTEGER" property="courseid" />
    <result column="teacherId" jdbcType="INTEGER" property="teacherid" />
    <result column="questionnaireId" jdbcType="INTEGER" property="questionnaireid" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="releaseTime" jdbcType="TIMESTAMP" property="releasetime" />
    <result column="startRespondTime" jdbcType="TIMESTAMP" property="startrespondtime" />
    <result column="endRespondTime" jdbcType="TIMESTAMP" property="endrespondtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.nix.lovedomain.model.Publishquestionnaire">
    <result column="statistics" jdbcType="LONGVARCHAR" property="statistics" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, releaseId, courseId, teacherId, questionnaireId, description, releaseTime, startRespondTime, 
    endRespondTime
  </sql>
  <sql id="Blob_Column_List">
    statistics
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.nix.lovedomain.model.PublishquestionnaireExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publishQuestionnaire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.nix.lovedomain.model.PublishquestionnaireExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from publishQuestionnaire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publishQuestionnaire
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publishQuestionnaire
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.nix.lovedomain.model.PublishquestionnaireExample">
    delete from publishQuestionnaire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.nix.lovedomain.model.Publishquestionnaire">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into publishQuestionnaire (releaseId, courseId, teacherId, 
      questionnaireId, description, releaseTime, 
      startRespondTime, endRespondTime, statistics
      )
    values (#{releaseid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{teacherid,jdbcType=INTEGER}, 
      #{questionnaireid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{releasetime,jdbcType=TIMESTAMP}, 
      #{startrespondtime,jdbcType=TIMESTAMP}, #{endrespondtime,jdbcType=TIMESTAMP}, #{statistics,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.nix.lovedomain.model.Publishquestionnaire">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into publishQuestionnaire
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="releaseid != null">
        releaseId,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="teacherid != null">
        teacherId,
      </if>
      <if test="questionnaireid != null">
        questionnaireId,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="releasetime != null">
        releaseTime,
      </if>
      <if test="startrespondtime != null">
        startRespondTime,
      </if>
      <if test="endrespondtime != null">
        endRespondTime,
      </if>
      <if test="statistics != null">
        statistics,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="releaseid != null">
        #{releaseid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="questionnaireid != null">
        #{questionnaireid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="releasetime != null">
        #{releasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="startrespondtime != null">
        #{startrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="endrespondtime != null">
        #{endrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="statistics != null">
        #{statistics,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.nix.lovedomain.model.PublishquestionnaireExample" resultType="java.lang.Integer">
    select count(*) from publishQuestionnaire
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update publishQuestionnaire
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.releaseid != null">
        releaseId = #{record.releaseid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.teacherid != null">
        teacherId = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.questionnaireid != null">
        questionnaireId = #{record.questionnaireid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.releasetime != null">
        releaseTime = #{record.releasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startrespondtime != null">
        startRespondTime = #{record.startrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endrespondtime != null">
        endRespondTime = #{record.endrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statistics != null">
        statistics = #{record.statistics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update publishQuestionnaire
    set id = #{record.id,jdbcType=INTEGER},
      releaseId = #{record.releaseid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      teacherId = #{record.teacherid,jdbcType=INTEGER},
      questionnaireId = #{record.questionnaireid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      releaseTime = #{record.releasetime,jdbcType=TIMESTAMP},
      startRespondTime = #{record.startrespondtime,jdbcType=TIMESTAMP},
      endRespondTime = #{record.endrespondtime,jdbcType=TIMESTAMP},
      statistics = #{record.statistics,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update publishQuestionnaire
    set id = #{record.id,jdbcType=INTEGER},
      releaseId = #{record.releaseid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      teacherId = #{record.teacherid,jdbcType=INTEGER},
      questionnaireId = #{record.questionnaireid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      releaseTime = #{record.releasetime,jdbcType=TIMESTAMP},
      startRespondTime = #{record.startrespondtime,jdbcType=TIMESTAMP},
      endRespondTime = #{record.endrespondtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.nix.lovedomain.model.Publishquestionnaire">
    update publishQuestionnaire
    <set>
      <if test="releaseid != null">
        releaseId = #{releaseid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="teacherid != null">
        teacherId = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="questionnaireid != null">
        questionnaireId = #{questionnaireid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="releasetime != null">
        releaseTime = #{releasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="startrespondtime != null">
        startRespondTime = #{startrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="endrespondtime != null">
        endRespondTime = #{endrespondtime,jdbcType=TIMESTAMP},
      </if>
      <if test="statistics != null">
        statistics = #{statistics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.nix.lovedomain.model.Publishquestionnaire">
    update publishQuestionnaire
    set releaseId = #{releaseid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      teacherId = #{teacherid,jdbcType=INTEGER},
      questionnaireId = #{questionnaireid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      releaseTime = #{releasetime,jdbcType=TIMESTAMP},
      startRespondTime = #{startrespondtime,jdbcType=TIMESTAMP},
      endRespondTime = #{endrespondtime,jdbcType=TIMESTAMP},
      statistics = #{statistics,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nix.lovedomain.model.Publishquestionnaire">
    update publishQuestionnaire
    set releaseId = #{releaseid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      teacherId = #{teacherid,jdbcType=INTEGER},
      questionnaireId = #{questionnaireid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      releaseTime = #{releasetime,jdbcType=TIMESTAMP},
      startRespondTime = #{startrespondtime,jdbcType=TIMESTAMP},
      endRespondTime = #{endrespondtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>